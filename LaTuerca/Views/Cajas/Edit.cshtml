@model LaTuerca.Models.Caja
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Modificar Caja";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string Nick = "";
    int IndexNick = 0;
    string NewNick = "";

}
@if (Request.IsAuthenticated)
{
    if (User.Identity.GetUserName() != "")
    {
        Nick = User.Identity.GetUserName();
        IndexNick = Nick.IndexOf("@");

        NewNick = Nick.Substring(0, IndexNick);
    }
}

@if (TempData["notice"] != null)
{
    <div class="pad margin no-print" id="mensaje">
        <div class="callout callout-success" style="margin-bottom: 0!important;">
            <i class="fa fa-check"></i>   @TempData["notice"]
        </div>
    </div>
}
<section class="content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-lg-12">
                <div class="box box-primary">
                    <div class='box-header with-border'>
                        <div class="user-block">
                            <img class="img-circle tip" src="~/Content/img/mundo.jpeg" width="50" title="Mundo Tuerca" alt="Mundo Tuerca">
                            <span class="username"><a href="#">Mundo Tuerca, Inc</a></span>
                            <span class='description'>@ViewBag.Title</span>
                        </div>
                        <div class='box-tools btn-group'>
                            <!--
                            <a href="" id="" class="btn btn-link btn-sm hidden-lg tip" data-toggle="modal" data-target="#crearCliente" title="Crear nuevo cliente">
                                <i class="fa fa-user-plus"></i>
                            </a>
                            <a href="" id="" class="btn btn-link btn-sm visible-lg tip" data-toggle="modal" data-target="#crearCliente" title="Crear nuevo cliente">
                                <i class="fa fa-user-plus"></i> <b>Nuevo Cliente</b>
                            </a>
                            -->
                            <a href="@Url.Action("Index", "Cajas")" id="" class="btn btn-link btn-sm hidden-lg tip" title="Ver Lista">
                                <i class="fa fa-files-o"></i>
                            </a>
                            <a href="@Url.Action("Index", "Cajas")" id="" class="btn btn-link btn-sm visible-lg tip" title="Ver Lista">
                                <i class="fa fa-files-o"></i> <b>Ver Lista</b>
                            </a>
                            <button href="" id="open" class="btn btn-danger btn-sm tip pagar pull-right visible-lg" title="Cerrar" type="submit" name="close" value="Cerrar Caja">
                                <i class="fa fa-lock"></i>  <b>Cerrar Caja</b>
                            </button>
                            <button href="" id="open" class="btn btn-danger hidden-lg btn-sm tip pagar pull-right" title="Cerrar" type="submit" name="close" value="Cerrar Caja">
                                <i class="fa fa-lock"></i>
                            </button>
                        </div><!-- /.box-tools -->
                    </div><!-- /.box-header -->
                    <div class='box-body'>
                        <div class="col-lg-12 form-horizontal">
                            @Html.HiddenFor(model => model.Id)
                            <div class="form-group">
                                @Html.LabelFor(model => model.Fecha_Apertura, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Fecha_Apertura, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.Fecha_Apertura, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Inicial, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Inicial, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.Inicial, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Fecha_Cierre, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Fecha_Cierre, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Fecha_Cierre, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Cierre, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Cierre, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Cierre, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Operaciones, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Operaciones, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.Operaciones, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Usuario, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.Usuario, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Estado)
                                        @Html.ValidationMessageFor(model => model.Estado, "", new { @id = "Estado" ,@class = "text-danger", @checked = "checked", @readonly = "true" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
            $(function () {
                $("#Estado").attr('readonly', true);
                $("#Estado").prop('disabled', true);
                $("input[name=Estado]").attr('checked', true);
                $("input[name=Estado]").val("true");

                $('#Estado').prop('checked', true);
                $('#Estado').attr('checked', true);
                $('#Estado').addClass("icheckbox_minimal-blue checked");
                $('#Estado').attr('aria-checked', 'true');
                $(".icheckbox_minimal-blue").addClass("checked");

                $('#datetimepicker1').datetimepicker({
                    icons: {
                        time: "fa fa-clock-o",
                        date: "fa fa-calendar",
                        up: "fa fa-arrow-up",
                        down: "fa fa-arrow-down"
                    },
                    locale: 'es',
                    format: 'YYYY-MM-DD hh:mm:ss'
                });
                $('#datetimepicker2').datetimepicker();
                $("#Usuario").val('@NewNick');
                $("#Usuario").attr('readonly', true);

                $("#UsuarioModal").val('@NewNick');
                $("#UsuarioModal").attr('readonly', true);
            });
    </script>
}


