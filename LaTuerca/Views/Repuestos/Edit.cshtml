@model LaTuerca.Models.Repuesto
@using LaTuerca.Controllers
@{
    EmpresasController empresa = new EmpresasController();
    ViewBag.NombreEmpresa = empresa.getNombreEmpresa();
}

@{
    ViewBag.Title = "Modificar Repuesto";
}

@if (TempData["notice"] != null)
{
    <div class="pad margin no-print" id="mensaje">
        <div class="callout callout-success" style="margin-bottom: 0!important;">
            <i class="fa fa-check"></i>   @TempData["notice"]
        </div>
    </div>
}
<section class="content">
   @using (Html.BeginForm("Create", "Repuestos", FormMethod.Post, new { enctype = "multipart/form-data" }))
   {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        <div class="row">
            <div class="col-lg-12">
                <div class="box box-primary">
                    <div class='box-header with-border'>
                        <div class="user-block">
                            <img class="img-circle tip" src="~/Content/img/mundo.jpeg" width="50" title="@ViewBag.NombreEmpresa" alt="@ViewBag.NombreEmpresa">
                            <span class="username text-capitalize text-light-blue text-blue">@ViewBag.NombreEmpresa</span>
                            <span class='description'>@ViewBag.Title</span>
                        </div>
                        <div class='box-tools btn-group'>
                            <a href="@Url.Action("Index", "Repuestos")" id="" class="btn btn-link btn-sm hidden-lg tip" title="Ver Repuestos">
                                <i class="fa fa-files-o"></i>
                            </a>
                            <a href="@Url.Action("Index", "Repuestos")" id="" class="btn btn-link btn-sm visible-lg tip" title="Ver Repuestos">
                                <i class="fa fa-files-o"></i> <b>Ver Repuestos</b>
                            </a>
                            <button href="" id="" class="btn btn-success btn-sm tip pull-right visible-lg" title="Guardar" type="submit" name="" value="Guardar">
                                <i class="br-floppy"></i>  <b>Guardar</b>
                            </button>
                            <button href="" id="" class="btn btn-success hidden-lg btn-sm tip pull-right" title="Guardar" type="submit" name="" value="Guardar">
                                <i class="br-floppy"></i>
                            </button>
                        </div><!-- /.box-tools -->
                    </div><!-- /.box-header -->
                    <div class='box-body'>
                        <div class="col-lg-9">
                            <div class="form-group has-feedback col-lg-8" id="div-nombre">
                                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @id = "nombre", length = "3", placeholder = "Nombre del producto", @required = "true", aria_required = "true" } })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", @id = "stock", placeholder = "Stock", @required = "true", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(model => model.StockMinimo, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.StockMinimo, new { htmlAttributes = new { @class = "form-control", @id = "stockminimo", min = "1", max = "100", placeholder = "Stock mínimo", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.StockMinimo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(model => model.StockMaximo, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.StockMaximo, new { htmlAttributes = new { @class = "form-control", @id = "stockmaximo", min = "1", max = "100", placeholder = "Stock máximo", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.StockMaximo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-4" id="preciocoste">
                                @Html.LabelFor(model => model.PrecioCosto, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.PrecioCosto, new { htmlAttributes = new { @class = "form-control", @id = "preciocosto", min = "0", autocomplete = "off", placeholder = "Precio de coste", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.PrecioCosto, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(model => model.PrecioVenta1, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.PrecioVenta1, new { htmlAttributes = new { @class = "form-control", @id = "precioventa1", min = "0", autocomplete = "off", placeholder = "Precio de venta 1", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.PrecioVenta1, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(model => model.PrecioVenta2, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.PrecioVenta2, new { htmlAttributes = new { @class = "form-control", @id = "precioventa2", min = "0", autocomplete = "off", placeholder = "Precio de venta2", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.PrecioVenta2, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(model => model.PrecioVenta3, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.PrecioVenta3, new { htmlAttributes = new { @class = "form-control", @id = "precioventa3", min = "0", autocomplete = "off", placeholder = "Precio de venta3", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.PrecioVenta3, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "file-loading", type = "file", autocomplete = "off", placeholder = "Imagen", @required = "true", @multiple = "true", @data_show_upload = "false", @data_show_caption = "true" } })
                                @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group col-lg-12" id="div-select-modelo">
                                <a href="@Url.Action("Index", "Modelos")" class="tip" title="Ir a Modelo">
                                    @Html.LabelFor(model => model.ModeloId, htmlAttributes: new { @class = "control-label", style = "cursor:pointer;" })
                                </a>
                                <a class="pull-right tip btn btn-default btn-xs" data-toggle="modal" data-target="#crearModelo" title="Crear Modelo">
                                    <i class="en-plus2" id="icon1"></i>
                                </a>
                                @Html.DropDownList("ModeloId", null, "Seleccione un modelo", htmlAttributes: new { @class = "", @id = "select-modelo" })
                                @Html.ValidationMessageFor(model => model.ModeloId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-12" id="div-select-categoria">
                                <a href="@Url.Action("Index", "Categorias")" class="tip" title="Ir a Categoria">
                                    @Html.LabelFor(model => model.CategoriaId, htmlAttributes: new { @class = "control-label", style = "cursor:pointer;" })
                                </a>
                                <a class="pull-right tip btn btn-default btn-xs" data-toggle="modal" data-target="#crearCategoria" title="Crear Categoria">
                                    <i class="en-plus2" id="icon1"></i>
                                </a>
                                @Html.DropDownList("CategoriaId", null, "Seleccione una categoria", htmlAttributes: new { @class = "", @id = "select-categoria" })
                                @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-12" id="div-select-proveedor">
                                <a href="@Url.Action("Index", "Proveedores")" class="tip" title="Ir a Proveedor">
                                    @Html.LabelFor(model => model.ProveedorId, htmlAttributes: new { @class = "control-label", style = "cursor:pointer;" })
                                </a>
                                <a class="pull-right tip btn btn-default btn-xs" data-toggle="modal" data-target="#crearProveedor" title="Crear Proveedor">
                                    <i class="en-plus2" id="icon1"></i>
                                </a>
                                @Html.DropDownList("ProveedorId", null, "Seleccione un proveedor", htmlAttributes: new { @class = "", @id = "select-proveedor" })
                                @Html.ValidationMessageFor(model => model.ProveedorId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $('#select-proveedor').selectize({
                labelField: 'model',
                valueField: 'id',
                optgroupField: 'make',
                optgroupLabelField: 'name',
                optgroupValueField: 'id',
                lockOptgroupOrder: true,
                searchField: ['model'],
                plugins: ['optgroup_columns'],
                openOnFocus: true
            });
            $('#select-marca').selectize({
                labelField: 'model',
                valueField: 'id',
                optgroupField: 'make',
                optgroupLabelField: 'name',
                optgroupValueField: 'id',
                lockOptgroupOrder: true,
                searchField: ['model'],
                plugins: ['optgroup_columns'],
                openOnFocus: true
            });
            $('#select-modelo').selectize({
                labelField: 'model',
                valueField: 'id',
                optgroupField: 'make',
                optgroupLabelField: 'name',
                optgroupValueField: 'id',
                lockOptgroupOrder: true,
                searchField: ['model'],
                plugins: ['optgroup_columns'],
                openOnFocus: true
            });
            $('#select-categoria').selectize({
                labelField: 'model',
                valueField: 'id',
                optgroupField: 'make',
                optgroupLabelField: 'name',
                optgroupValueField: 'id',
                lockOptgroupOrder: true,
                searchField: ['model'],
                plugins: ['optgroup_columns'],
                openOnFocus: true
            });
        });
    </script>
}




@Html.Partial("_create_modelo", Model.Modelo)
@Html.Partial("_create_categoria", Model.Categoria)
@Html.Partial("_create_proveedor", Model.Proveedor)