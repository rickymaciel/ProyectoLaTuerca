@model LaTuerca.Models.Modelo

@{
    ViewBag.Title = "Crear Modelo";
}

<section class="content-header">
    <h1>
        <i class="im-menu"></i> @ViewBag.Title
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"> <i class="im-menu"></i> @ViewBag.Title</a></li>
    </ol>
</section>
<section class="content">
    <div class="row">
        @if (!Html.ViewData.ModelState.IsValid)
        {
            <div class="col-lg-12" id="mensaje">
                <div class="callout callout-success">
                    @Html.ValidationSummary()
                </div>
            </div>
        }
        <div class="col-lg-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">
                        <a href="@Url.Action("Index", "Modelos")" class="btn btn-primary">
                            <i class="im-menu"></i> Ver todo
                        </a>
                    </h3>
                </div>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <form role="form" class="form-horizontal">
                        <div class="box-body">
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.NombreModelo, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.NombreModelo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NombreModelo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Fabricante, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Fabricante, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Fabricante, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Anho, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Anho, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Anho, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Cilindros, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Cilindros, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Cilindros, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Potencia, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Potencia, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Potencia, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Tipo_Cambio, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Tipo_Cambio, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Tipo_Cambio, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label" })
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Estado)
                                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <!-- /.box-body -->
                        <div class="box-footer">
                            <div class="pull-right">
                                <button type="submit" class="btn btn-social btn-success">
                                    <i class="im-checkbox-checked"></i> Guardar
                                </button>
                            </div>
                            <button type="reset" class="btn btn-social btn-default">
                                <i class="im-remove"></i> Cancelar
                            </button>
                        </div>
                    </form>
                }
            </div>
            <!-- /.box -->
        </div>
    </div>
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}