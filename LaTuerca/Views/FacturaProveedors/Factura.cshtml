@model LaTuerca.Models.FacturaProveedor
@using LaTuerca.Controllers
@{
    EmpresasController empresa = new EmpresasController();
    ViewBag.NombreEmpresa = empresa.getNombreEmpresa();
}
@{
    ViewBag.Title = "Presupuesto";
}

@if (TempData["notice"] != null)
{
    <div class="pad margin no-print" id="mensaje">
        <div class="callout callout-success" style="margin-bottom: 0!important;">
            <i class="fa fa-check"></i>   @TempData["notice"]
        </div>
    </div>
}
<section class="content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-lg-12">
                <div class="box box-primary">
                    <div class='box-header with-border'>
                        <div class="user-block">
                            <img class="img-circle tip" src="~/Content/img/mundo.jpeg" width="50" title="@ViewBag.NombreEmpresa" alt="@ViewBag.NombreEmpresa">
                            <span class="username text-capitalize text-light-blue text-blue">@ViewBag.NombreEmpresa</span>
                            <span class='description'>@ViewBag.Title</span>
                        </div>
                        <div class='box-tools btn-group'>
                            <!--
                            <a href="" id="" class="btn btn-link btn-sm hidden-lg tip" data-toggle="modal" data-target="#crearProveedor" title="Crear nuevo proveedor">
                                <i class="fa fa-user-plus"></i>
                            </a>
                            <a href="" id="" class="btn btn-link btn-sm visible-lg tip" data-toggle="modal" data-target="#crearProveedor" title="Crear nuevo proveedor">
                                <i class="fa fa-user-plus"></i> <b>Nuevo Proveedor</b>
                            </a>
                            -->
                            <a href="@Url.Action("Facturados", "FacturaProveedors")" id="" class="btn btn-link btn-sm hidden-lg tip" title="Ver Facturas">
                                <i class="fa fa-files-o"></i>
                            </a>
                            <a href="@Url.Action("Facturados", "FacturaProveedors")" id="" class="btn btn-link btn-sm visible-lg tip" title="Ver Facturas">
                                <i class="fa fa-files-o"></i> <b>Ver Facturas</b>
                            </a>
                            <button href="" id="saveInvoiceBtn" class="btn btn-success btn-sm tip pagar pull-right visible-lg" title="Guardar Factura" type="submit" name="saveInvoice" value="Guardar">
                                <i class="br-floppy"></i>  <b>Guardar Factura</b>
                            </button>
                            <button href="" id="saveInvoiceBtn" class="btn btn-success hidden-lg btn-sm tip pagar pull-right" title="Guardar Factura" type="submit" name="saveInvoice" value="Guardar">
                                <i class="br-floppy"></i>
                            </button>
                        </div><!-- /.box-tools -->
                    </div><!-- /.box-header -->
                    <div class='box-body'>
                        <div class="col-lg-12 form-horizontal">
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <div class="col-lg-2">
                                        <a href=""  class="btn btn-default btn-sm tip" data-toggle="modal" data-target="#crearProveedor" title="Crear nuevo proveedor">
                                            <i class="fa fa-user-plus"></i>
                                        </a>
                                    </div>
                                    <div class="col-lg-10 has-feedback ">
                                        <div class="">
                                            <input type="text" class="form-control RazonSocial input-sm" id="RazonSocial" placeholder="Buscar proveedor...">
                                            <span class="tip glyphicon glyphicon-search form-control-feedback text-muted tip" data-toggle="modal" data-target="#crearProveedor" title="Crear nuevo proveedor"></span>
                                            @Html.EditorFor(model => model.ProveedorId, new { htmlAttributes = new { @id = "ProveedorId", @values = "", @required = "true", aria_required = "true", type = "hidden" } })
                                            @Html.ValidationMessageFor(model => model.ProveedorId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-lg-12">
                                        <textarea type="text" class="form-control input-sm InfoProveedor" placeholder="Información del Proveedor" rows="4" id="InfoProveedor" readonly required ></textarea>
                                    </div>
                                </div>
                                <div class="form-group hidden">
                                    <div class="col-lg-12">
                                        @Html.LabelFor(model => model.Pagado, htmlAttributes: new { @class = "" })
                                        @Html.EditorFor(model => model.Pagado, "", new { @required = "true" })
                                        @Html.ValidationMessageFor(model => model.Pagado, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-lg-3" })
                                    <div class="col-lg-9 has-feedback input-daterange" data-provide="datepicker">
                                        @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control input-sm", @id = "fechacompra", placeholder = "Fecha", @required = "true", aria_required = "true" } })
                                        <span class="glyphicon glyphicon-calendar form-control-feedback text-muted"></span>
                                        @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FechaPago, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9 has-feedback input-daterange" data-provide="datepicker">
                                        @Html.EditorFor(model => model.FechaPago, new { htmlAttributes = new { @class = "form-control input-sm", @id = "fechacompra", placeholder = "Fecha", @required = "true", aria_required = "true" } })
                                        <span class="glyphicon glyphicon-calendar form-control-feedback text-muted"></span>
                                        @Html.ValidationMessageFor(model => model.FechaPago, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Metodo, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.DropDownList("Metodo", new SelectList(Enum.GetValues(typeof(LaTuerca.Controllers.FacturaProveedorsController.Metodo))), "Método de pago", new { @class = "form-control input-sm" })
                                        @Html.ValidationMessageFor(model => model.Metodo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <div class="has-feedback">
                                        @Html.LabelFor(model => model.NumeroFactura, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.NumeroFactura, new { htmlAttributes = new { @class = "form-control input-sm text-danger", placeholder = "Nº de Factura", @required = "true", aria_required = "true" } })
                                            <span class="glyphicon glyphicon-inbox form-control-feedback text-muted"></span>
                                            @Html.ValidationMessageFor(model => model.NumeroFactura, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @type ="text", @class = "form-control input-sm", placeholder = "Total", @required = "true", aria_required = "true" } })
                                        @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TotalPagado, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.TotalPagado, new { htmlAttributes = new { @type ="text", @class = "form-control input-sm tip", title = "Ingresar monto a pagar", placeholder = "Total Pagado", @required = "true", aria_required = "true" } })
                                        @Html.ValidationMessageFor(model => model.TotalPagado, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-12">
                <div class="box box-primary direct-chat direct-chat-primary">
                    <div class="box-body">
                        <div class="col-lg-12 table-responsive">
                            <table class="table table-striped table-condensed table-hover table-inverse table-sm tabledat tip" title="Agregar nueva linea" id="itemsTable">
                                <thead>
                                    <tr class="">
                                        <th class="col-lg-1">
                                            <a href="#" id="addRowBtn"  class="btn btn-social-icon btn-github tipR" title="Agregar nueva línea"><i class="fa fa-plus-circle"></i></a>
                                        </th>
                                        <th class="col-lg-3">Description</th>
                                        <th class="col-lg-1">Cantidad</th>
                                        <th class="col-lg-2">Precio Unit.</th>
                                        <th class="col-lg-2">Neto.</th>
                                        <th class="col-lg-1">Iva.</th>
                                        <th class="col-lg-2">Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr class="item-row">
                                        <td class="col-lg-1">
                                            <button id="deleteRow" class="btn btn-xs btn-danger tip" title="Eliminar" disabled> <i class="im-remove2"></i></button>
                                        </td>
                                        <td class="col-lg-3">
                                            <input type="hidden" name="detallesFacturaProveedor[0].RepuestoId" value="" placeholder="Cod.: Repuesto" class="form-control input-sm" id="RepuestoId" tabindex="1" readonly="readonly" />

                                            <div class="has-feedback">
                                                <input type="text" name="detallesFacturaProveedor[0].Nombre" value="" class="form-control input-sm" placeholder="Buscar Repuesto" autofocus id="Nombre" required />
                                                <span class="glyphicon glyphicon-search form-control-feedback text-muted"></span>
                                            </div>
                                        </td>
                                        <td class="col-lg-1">
                                            <input type="number" name="detallesFacturaProveedor[0].Cantidad" value="1" min="1" max="100" class="form-control input-sm" id="Cantidad" placeholder="Cantidad" required />
                                        </td>
                                        <td class="col-lg-2">
                                            <input name="detallesFacturaProveedor[0].Precio" class="form-control input-sm" placeholder="Precio" id="PrecioCosto" type="text" required>
                                        </td>
                                        <td class="col-lg-2">
                                                <input  class="form-control input-sm" id="TotalLineaNeto" placeholder="Neto" type="text" readonly="readonly" required>
                                        </td>
                                        <td class="col-lg-1">
                                                <input  class="form-control input-sm" id="TotalLineaIva" placeholder="Iva" type="text" readonly="readonly" required>
                                            
                                        </td>
                                        <td class="col-lg-2">
                                            <input name="detallesFacturaProveedor[0].Total" class="form-control input-sm" id="TotalLinea" placeholder="Total" type="text" readonly="readonly" required>
                                        </td>
                                    </tr>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th colspan="5"></th>
                                        <th class="text-right">Subtotal:</th>
                                        <td id="subTotal" class="text-right"></td>
                                    </tr>
                                    <tr>
                                        <th colspan="4"></th>
                                        <th class="text-right">
                                            <div class="has-feedback">
                                                <input placeholder="IVA" type="number" name="tax" min="1" max="100" id="tax" value="10" class="form-control input-sm" />
                                                <span class="fa fa-percent form-control-feedback"></span>
                                            </div>
                                        </th>
                                        <th class="text-right">Iva:</th>
                                        <td id="salesTax" class="text-right"></td>
                                    </tr>
                                    <tr class="lead">
                                        <th colspan="5"></th>
                                        <th class="text-right">Total:</th>
                                        <td id="grandTotal" class=" text-right"> </td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryCompra")
    <script>
        $(function () {

            var oTable = $('table.tabledata').DataTable({
                "bProcessing": true,
                "sPaginationType": "full_numbers",
                "paging": true,
                "iDisplayLength": 10,
                "bPaginate": true,
                "bSort": true,
                "oLanguage": {
                    "oPaginate": {
                        "sPrevious": "←",
                        "sNext": "→",
                        "sLast": "»",
                        "sFirst": "«"
                    },
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });

            load_proveedores();
            function load_proveedores() {
                var RazonSocialProveedor = {
                    url: "/FacturaProveedors/getProveedores",
                    getValue: "RazonSocial",
                    list: {
                        match: {
                            enabled: true
                        },
                        maxNumberOfElements: 8,
                        sort: {
                            enabled: true
                        },
                        onSelectItemEvent: function () {
                            var ProveedorId = $(".RazonSocial").getSelectedItemData().Id;
                            var RazonSocial = $(".RazonSocial").getSelectedItemData().RazonSocial;
                            var Ruc = $(".RazonSocial").getSelectedItemData().Ruc;
                            //var Telefono = $(".RazonSocial").getSelectedItemData().Telefono;
                            var Direccion = $(".RazonSocial").getSelectedItemData().Direccion;

                            $("#ProveedorId").val(ProveedorId).trigger("change");
                            //$("#RazonSocial").val(RazonSocial).trigger("change");
                            //$("#Ruc").val(Ruc).trigger("change");
                            //$("#Telefono").val(Telefono).trigger("change");
                            //$("#Direccion").val(Direccion).trigger("change");
                            $("#saveInvoiceBtn").removeClass('disabled');
                            $("#InfoProveedor").val(RazonSocial + ' - R.U.C.: ' + Ruc + ' - Direccion:' + Direccion).trigger("change");
                            $("#InfoProveedor").css('border', '1px solid rgba(0, 99, 0, 0.4)');
                            //$("#addRowBtn").removeClass('disabled');
                        },
                    },
                    //theme: "plate-dark",
                    //theme: "square"
                    //theme: "funky"
                    //theme: "round"
                };
                $("input#RazonSocial").easyAutocomplete(RazonSocialProveedor);
                $(".easy-autocomplete-container").addClass("text-danger");

            };
            $("#InfoProveedor").css('border', '1px solid rgba(255, 0, 0, 0.4)');
        $("select#Metodo").prop('disabled', true);
        $("#TotalPagado").attr('readonly', true);
        $("#TotalPagado").val(0);
        $("#Pagado").prop('disabled', true);
        $("select#Metodo").change(function () {
            var str = "";
            $("select option:selected").each(function () {
                str = $(this).text();
                if (str == "Contado") {
                    var Total = $("#Total").val();
                    var TotalPagado = $("#TotalPagado").val(Total);
                    $("input[name=Pagado]").attr('checked', true);
                    $("input[name=Pagado]").val("true");

                    $('#Pagado').prop('checked', true);
                    $('#Pagado').attr('checked', true);
                    $('#Pagado').addClass("icheckbox_minimal-blue checked");
                    $('#Pagado').attr('aria-checked', 'true');
                    $(".icheckbox_minimal-blue").addClass("checked");
                } else {
                    var TotalPagado = $("#TotalPagado").val(0);
                    $("input[name=Pagado]").attr('checked', false);
                    $("input[name=Pagado]").val("false");

                    $('#Pagado').prop('checked', false);
                    $('#Pagado').attr('checked', false);
                    $('#Pagado').addClass("icheckbox_minimal-blue");
                    $('#Pagado').removeClass("checked");
                    $('#Pagado').attr('aria-checked', 'false');
                    $(".icheckbox_minimal-blue").removeClass("checked");
                }
            });
            //$("div").text(str);
        }).change();


        var serviceURL = 'Cajas/ObtenerUltimoCajaAbierto';

        $.ajax({
            type: "POST",
            url: serviceURL,
            data: param = "",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: successFunc,
            error: errorFunc
        });

        function successFunc(data, status) {
            //alert(data);
            if (data == 0) {
                window.location.href = "http://localhost:53172/Cajas/Index";
            }
        }
        function errorFunc() {
            alert('error');
        }
    });
    </script>
}



<div class="modal" id="crearProveedor" tabindex="-1" role="dialog">
    @using (Ajax.BeginForm("AjaxCreate", "FacturaProveedors", FormMethod.Post,
        new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST",
            UpdateTargetId = "Proveedor"

        }))
    {
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">
                        <span class="fa fa-user-plus"></span> 
                        Nuevo Proveedor
                    </h4>
                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.Hidden("action", HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString())
                    @Html.Hidden("controller", HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString())
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Proveedor.RazonSocial, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.EditorFor(model => model.Proveedor.RazonSocial, new { htmlAttributes = new { @class = "form-control Cliente_RazonSocial", @placeholder = "Razón Social", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.Proveedor.RazonSocial, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Proveedor.Ruc, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.EditorFor(model => model.Proveedor.Ruc, new { htmlAttributes = new { @class = "form-control", @placeholder = "C.I.Nº / R.U.C", @required = "true", @data_inputmask = "'mask': '9999999-9'", @data_mask = "" } })
                                @Html.ValidationMessageFor(model => model.Proveedor.Ruc, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Proveedor.Direccion, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.EditorFor(model => model.Proveedor.Direccion, new { htmlAttributes = new { @class = "form-control", @placeholder = "Dirección", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.Proveedor.Direccion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Proveedor.Telefono, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.EditorFor(model => model.Proveedor.Telefono, new { htmlAttributes = new { @class = "form-control", @placeholder = "Teléfono", @required = "true", @data_inputmask = "'mask': '(099) 999-999'", @data_mask = "" } })
                                @Html.ValidationMessageFor(model => model.Proveedor.Telefono, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Proveedor.Celular, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.EditorFor(model => model.Proveedor.Celular, new { htmlAttributes = new { @class = "form-control", @placeholder = "Celular", @required = "true", @data_inputmask = "'mask': '(0999) 999-999'", @data_mask = "" } })
                                @Html.ValidationMessageFor(model => model.Proveedor.Celular, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-success btnGuardar"><i class="en-add-to-list"></i> Guardar</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    }
</div><!-- /.modal -->



<div class="modal" id="crearRepuesto" tabindex="-1" role="dialog">
    @using (Ajax.BeginForm("AjaxCreateRepuesto", "FacturaProveedors", FormMethod.Post,
        new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST",
            UpdateTargetId = "Repuesto"

        }))
    {
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">
                        <span class="fa fa-user-plus"></span>
                        Nuevo Repuesto
                    </h4>
                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.Hidden("action", HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString())
                    @Html.Hidden("controller", HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString())
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Proveedor.RazonSocial, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.EditorFor(model => model.Proveedor.RazonSocial, new { htmlAttributes = new { @class = "form-control Cliente_RazonSocial", @placeholder = "Razón Social", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.Proveedor.RazonSocial, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Proveedor.Ruc, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.EditorFor(model => model.Proveedor.Ruc, new { htmlAttributes = new { @class = "form-control", @placeholder = "C.I.Nº / R.U.C", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.Proveedor.Ruc, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Proveedor.Direccion, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.EditorFor(model => model.Proveedor.Direccion, new { htmlAttributes = new { @class = "form-control", @placeholder = "Dirección", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.Proveedor.Direccion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Proveedor.Telefono, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.EditorFor(model => model.Proveedor.Telefono, new { htmlAttributes = new { @class = "form-control", @placeholder = "Teléfono", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.Proveedor.Telefono, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Proveedor.Celular, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.EditorFor(model => model.Proveedor.Celular, new { htmlAttributes = new { @class = "form-control", @placeholder = "Celular", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.Proveedor.Celular, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-success btnGuardar"><i class="en-add-to-list"></i> Guardar</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    }
</div><!-- /.modal -->