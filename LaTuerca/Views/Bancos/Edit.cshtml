@model LaTuerca.Models.Banco

@{
    ViewBag.Title = "Modificar";
}

<section class="content">
    <div class="row">



        @if (!Html.ViewData.ModelState.IsValid)
        {
            <div class="col-lg-12" id="mensaje">
                <div class="callout callout-success">
                    @Html.ValidationSummary()
                </div>
            </div>
        }
        <div class="col-lg-2">
            <div class="box box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title">Submenú</h3>
                    <div class="box-tools">
                        <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body no-padding">
                    <ul class="nav nav-pills nav-stacked">
                        <li>
                            <a href="@Url.Action("Create", "Bancos")">
                                <i class="im-plus"></i> Nuevo
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("Index", "Bancos")">
                                <i class="im-menu2"></i> Ver todo
                            </a>
                        </li>
                    </ul>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /. box -->
        </div>
        <!-- left column -->
        <div class="col-lg-10">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">
                        <i class="im-menu"></i> @ViewBag.Title
                    </h3>
                </div><!-- /.box-header -->
                <!-- form start -->
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <form role="form" class="form-horizontal">
                        <div class="box-body">
                            @Html.HiddenFor(model => model.Nombre)
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Nombre, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Direccion, "Direccion", htmlAttributes: new { @class = "control-label col-md-2" })

                              
                                @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Telefono, "Telefono", htmlAttributes: new { @class = "control-label col-md-2" })
                              
                                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Ruc, "R.U.C", htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.Ruc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Ruc, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.CuentaCorriente, "Cuenta Corriente", htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.CuentaCorriente, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CuentaCorriente, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
                              
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Estado, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Estado)
                                    @Html.ValidationMessageFor(model => model.Estado)
                                </div>
                            </div>

                            <div class="box-footer">
                                <button type="submit" class="btn btn-social btn-success pull-right">
                                    <i class="im-checkbox-checked"></i> Guardar
                                </button>
                            </div>
                    </form>
                }
            </div><!-- /.box -->
        </div>
    </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}